[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fsot-neuromorphic-ai"
version = "2.0.0"
description = "FSOT 2.0 Neuromorphic AI System - Clean Architecture"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "FSOT Development Team"}
]
keywords = ["ai", "neuromorphic", "consciousness", "fsot", "brain"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.24.0",
    "torch>=2.0.0",
    "asyncio-mqtt>=0.13.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0"
]

[project.optional-dependencies]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0", 
    "jinja2>=3.1.0"
]
testing = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0"
]
advanced = [
    "faiss-cpu>=1.7.4",
    "transformers>=4.30.0"
]
all = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "jinja2>=3.1.0",
    "pytest>=7.4.0", 
    "pytest-asyncio>=0.21.0",
    "faiss-cpu>=1.7.4",
    "transformers>=4.30.0"
]

[project.urls]
"Homepage" = "https://github.com/dappalumbo91/FSOT-Neuromorphic-AI-System"
"Bug Reports" = "https://github.com/dappalumbo91/FSOT-Neuromorphic-AI-System/issues"
"Source" = "https://github.com/dappalumbo91/FSOT-Neuromorphic-AI-System"

[project.scripts]
fsot = "main:main"
fsot-validate = "validate_environment:validate_environment"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "brain*", "config*", "interfaces*", "utils*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.pylint.messages_control]
disable = ["C0114", "C0115", "C0116"]  # Missing docstrings

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

name: FSOT Neuromorphic AI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  fsot-compliance-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist
    
    - name: Run FSOT Compatibility Tests
      run: |
        python -m pytest fsot_compatibility_tests.py -v --tb=short
    
    - name: Run Neural Network Integration Tests
      run: |
        python fsot_integration_test.py --ci-mode
    
    - name: Run Performance Benchmarks
      run: |
        python fsot_performance_monitor.py --benchmark --output ci_results.json
    
    - name: Validate FSOT Theoretical Compliance
      run: |
        python fsot_compliance_validator.py --strict
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: fsot-test-results-${{ matrix.python-version }}
        path: |
          ci_results.json
          FSOT_Integration_Test_Report_*.json
          fsot_compliance_report.json

  performance-regression-test:
    runs-on: ubuntu-latest
    needs: fsot-compliance-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Performance Regression Tests
      run: |
        python fsot_performance_regression.py --baseline-threshold 0.8
    
    - name: Performance Report
      run: |
        echo "## Performance Results" >> $GITHUB_STEP_SUMMARY
        python -c "import json; data=json.load(open('performance_results.json')); print('Speedup Factor: ' + str(data['average_speedup']) + 'x'); print('Memory Efficiency: ' + str(data['memory_efficiency']) + 'x'); print('Test Success Rate: ' + str(data['success_rate']*100) + '%')" >> $GITHUB_STEP_SUMMARY

  documentation-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install documentation dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme myst-parser
    
    - name: Build Documentation
      run: |
        cd docs && make html
    
    - name: Test Code Examples in Documentation
      run: |
        python docs/test_examples.py
